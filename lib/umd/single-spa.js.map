{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helps.js","../../src/start.js","../../src/lifecyckes/load.js","../../src/lifecyckes/bootstrap.js","../../src/lifecyckes/mount.js","../../src/lifecyckes/unmount.js","../../src/navigations/navigator-events.js","../../src/navigations/reroute.js","../../src/applications/app.js"],"sourcesContent":["// 描述应用的整个状态\r\n\r\nexport const NOT_LOADED = 'NOT_LOADED';  // 应用初始状态\r\nexport const LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE';  //加载资源\r\nexport const NOT_BOOTSTRAPPED = 'NOT_BOOTSTRAPPED';\r\nexport const BOOTSTRAPPING = 'BOOTSTRAPPING';   //  启动中\r\nexport const NOT_MOUNTED = 'NOT_MOUNTED';   //  没有调用mounte方法\r\nexport const MOUNTING = 'MOUNTING';   //  正在挂载中\r\nexport const MOUNTED = 'MOUNTED';   //  挂载完毕 \r\nexport const UPDATING = 'UPDATING';   //  更新中 \r\nexport const UNMOUNTING = 'UNMOUNTING';   //  解除挂载    \r\nexport const UNLOADING = 'UNLOADING';   //  完全卸载中    \r\nexport const LOAD_ERR = 'LOAD_ERR';   //      \r\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN';   //      \r\n\r\n// 当前应用是否被激活\r\nexport function isActive(app){\r\n    return app.status === MOUNTED\r\n}\r\n\r\n// 当前应用是否要被激活\r\nexport function shouldBeActive(app){   //如果返回true 那么应用就开始初始化等一系列操作\r\n    return app.activeWhen(window.location)\r\n}","import { reroute } from './navigations/reroute';\r\n\r\nexport let stated = false;\r\nexport function start(){\r\n  // 需要挂载应用\r\n  stated=true;\r\n  reroute();  //除了去加载应用还要去挂载应用\r\n}","import { LOADING_SOURCE_CODE, NOT_BOOTSTRAPPED } from \"../applications/app.helps\"\r\n\r\nfunction flattenFnArray(fns){\r\n    fns = Array.isArray(fns)?fns:[fns];\r\n    // Promise.resolve().then(()=>fn1(props)).then(()=>fn2(props));\r\n    // 通过promise链来链式调用  多个方法组合成一个方法\r\n    return (props)=>{\r\n        return fns.reduce((p,fn)=>p.then(()=>fn(props)),Promise.resolve());\r\n    }\r\n}\r\n\r\nexport async function toLoadPromise(app){\r\n    if(app.loadPromise){\r\n        return app.loadPromise;  //缓存机制\r\n    }\r\n\r\n    \r\n    return (app.loadPromise = Promise.resolve().then(async ()=>{\r\n        app.status = LOADING_SOURCE_CODE;\r\n        let {bootstrap,mount,unmount} = await app.loadApp(app.customProps);\r\n        app.status = NOT_BOOTSTRAPPED;  //还没有调用bootstrap方法\r\n    \r\n        //将多个promise组合到一起 compose\r\n        app.bootstrap = flattenFnArray(bootstrap);\r\n        app.mount = flattenFnArray(mount);\r\n        app.unmount = flattenFnArray(unmount);\r\n        delete app.loadPromise;\r\n        return app\r\n\r\n    }))\r\n\r\n}","import { NOT_BOOTSTRAPPED, NOT_MOUNTED,BOOTSTRAPPING } from \"../applications/app.helps\";\r\n\r\nexport async function toBootstrapPromise(app){\r\n  if(app.status != NOT_BOOTSTRAPPED){\r\n    return app\r\n  }\r\n  app.status = BOOTSTRAPPING;\r\n  await app.bootstrap(app.customProps);\r\n  app.status = NOT_MOUNTED;\r\n  return app;\r\n} ","import { MOUNTED, MOUNTING, NOT_MOUNTED } from \"../applications/app.helps\";\r\n\r\nexport async function toMountPromise(app){\r\n  if(app.status != NOT_MOUNTED){\r\n    return app\r\n  }\r\n  app.status = MOUNTING;\r\n  await app.mount(app.customProps);\r\n  app.status = MOUNTED;\r\n  return app;\r\n}","import { MOUNTED, NOT_MOUNTED, UNMOUNTING } from \"../applications/app.helps\";\r\n\r\nexport async function toUnmountPromise(app){\r\n    // 当前应用有没有被挂载\r\n    if(app.status!=MOUNTED){\r\n        return app\r\n    }\r\n    app.status = UNMOUNTING;\r\n    await app.unmount(app.customProps);\r\n    app.status = NOT_MOUNTED;\r\n    return app;\r\n}","//  hashchange  popstate\r\n\r\nimport { reroute } from \"./reroute\";\r\n\r\nexport const routingEventsListeningTo = ['hashchange','popstate'];\r\n\r\nfunction urlReroute(e){\r\n    reroute([],arguments)   //根据路径重新加载不同的应用\r\n}\r\n\r\nconst capturedEventListeners = {   //后续挂载的事件先暂存起来\r\n    hashchange:[],  \r\n    popstate:[],  //当应用切换完成后调用\r\n}\r\n\r\n// 处理应用加载的逻辑在最前面\r\nwindow.addEventListener('hashchange',urlReroute);\r\nwindow.addEventListener('popstate',urlReroute);\r\n\r\nconst originalAddEventListener = window.addEventListener;\r\nconst originalRemoveEventListener = window.removeEventListener;\r\n\r\nwindow.addEventListener = function(eventName,fn){\r\n    if(routingEventsListeningTo.indexOf(eventName)>0 && capturedEventListeners[eventName].some(listener=>listener == fn)){\r\n      capturedEventListeners[eventName].push(fn);\r\n      return\r\n    }\r\n    return originalAddEventListener.apply(this,arguments)\r\n}\r\n\r\nwindow.removeEventListener = function(eventName,fn){\r\n  if(routingEventsListeningTo.indexOf(eventName)>0){\r\n    capturedEventListeners[eventName] = capturedEventListeners[eventName].filter(l=>l!=fn);\r\n    return\r\n  }\r\n  return originalRemoveEventListener.apply(this,arguments)\r\n}\r\n\r\n// 如果是hash路由，hash变化是可以切换\r\n// 浏览器路由，浏览器路由是H5qpiDE ,如果切换时不会触发popstate\r\n\r\nfunction patchedUpdateState(updateState,methodName){\r\n  return function(){\r\n    const urlBefore = window.location.href;\r\n    updateState.apply(this,arguments); // 调用切换的方法\r\n    const urlAfter = window.location.href;\r\n    if(urlAfter !== urlBefore){\r\n      // 重新加载应用 传入事件源\r\n      urlReroute(new PopStateEvent('popstate'));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nwindow.history.pushState = patchedUpdateState(window.history.pushState,'pushState');\r\nwindow.history.replaceState = patchedUpdateState(window.history.replaceState,'replaceState');\r\n\r\n//用户可能还会绑定自己的路由事件 vue\r\n\r\n\r\n// 当应用切换后，还要处理原来的方法，需要在应用切换后执行\r\n\r\n\r\n","import { getAppChanges } from \"../applications/app\";\r\nimport { stated } from \"../start\"\r\nimport {toLoadPromise} from \"../lifecyckes/load\"\r\nimport {toBootstrapPromise} from \"../lifecyckes/bootstrap\"\r\nimport {toMountPromise} from \"../lifecyckes/mount\"\r\nimport { toUnmountPromise } from \"../lifecyckes/unmount\";\r\nimport './navigator-events'\r\n\r\n// 核心应用处理方法\r\nexport function reroute(){\r\n\r\n    // 需要获取 需要加载的应用\r\n    // 需要获取 要被挂载的应用\r\n    // 哪些应用需要被卸载\r\n    const {appsToLoad,appsToMount,appsToUnmount} = getAppChanges();\r\n    // start 是同步的,但加载是异步的\r\n    if(stated){\r\n        // app 装载\r\n        return performAppChanges();\r\n    }else{\r\n        // 注册应用时，需要预先加载\r\n        return loadApps();\r\n\r\n    }\r\n\r\n    async function performAppChanges(){  //预先加载 \r\n        // 先卸载不需要的应用\r\n        let unmountPromises = appsToUnmount.map(toUnmountPromise)  //需要去卸载的aoo\r\n        // 去加载需要的应用\r\n        // 这个应用可能需要加载,但是路径不匹配,加载app1的时候切换到app2的时候\r\n        \r\n        appsToLoad.map(async (app)=>{ //将需要加载的应用 拿到=> 加载 => 启动 => 挂载\r\n            app = await toLoadPromise(app);\r\n            app = await toBootstrapPromise(app);\r\n            return toMountPromise(app);\r\n        }); \r\n        appsToMount.map(async (app)=>{\r\n          app = await toBootstrapPromise(app);\r\n          return toMountPromise(app);\r\n        })\r\n    }\r\n    \r\n    async function loadApps(){   //根据路径来装载应用\r\n        \r\n        let apps = await Promise.all(appsToLoad.map(toLoadPromise));\r\n    }\r\n}\r\n\r\n// 这个流程是用于初始化操作的，还需要路径切换时重新加载应用\r\n// 重写路由相关的方法\r\n","import { LOADING_SOURCE_CODE, MOUNTED, NOT_BOOTSTRAPPED, BOOTSTRAPPING, NOT_LOADED, NOT_MOUNTED } from \"./app.helps\";\r\nimport { reroute } from '../navigations/reroute';\r\nimport { shouldBeActive } from '../applications/app.helps';\r\n/**\r\n * @params {*} appName 应用名字\r\n * @params {*} loadApp 加载的应用\r\n * @params {*} activeWhen 当激活时会调用loadApp\r\n * @params {*} customProps 自定义属性\r\n */\r\nconst apps = [];  //存放所有的应用\r\n\r\n// 维护应用所有的状态  状态机\r\nexport function registerApplication(appName,loadApp,activeWhen,customProps){\r\n  apps.push({  //这里就将应用注册好了\r\n    name:appName,\r\n    loadApp,\r\n    activeWhen,\r\n    customProps,\r\n    status:NOT_LOADED\r\n  });\r\n  reroute();\r\n}\r\n\r\nexport function getAppChanges(){\r\n  const appsToUnmount = [];  //要卸载的APP\r\n  const appsToLoad = [];  //要加载的APP\r\n  const appsToMount = [];  //要挂载的APP\r\n  \r\n  apps.forEach(app=>{\r\n    const appShouldBeActive = shouldBeActive(app);\r\n    \r\n    switch(app.status){\r\n      case NOT_LOADED:\r\n      case LOADING_SOURCE_CODE:\r\n        if(appShouldBeActive){\r\n          appsToLoad.push(app)\r\n        }\r\n        break;\r\n      case NOT_BOOTSTRAPPED:\r\n      case BOOTSTRAPPING:\r\n      case NOT_MOUNTED:\r\n        if(appShouldBeActive){\r\n          appsToMount.push(app)\r\n        }\r\n        break;\r\n      case MOUNTED:\r\n        if(!appShouldBeActive){\r\n          appsToUnmount.push(app)\r\n        }\r\n        break;\r\n    }\r\n  })\r\n  return {appsToLoad,appsToMount,appsToUnmount}\r\n}"],"names":[],"mappings":"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"}